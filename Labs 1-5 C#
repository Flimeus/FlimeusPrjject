Лаба 1
using System;
namespace Lab1
{
 class Program
 {
 static void Main(string[] args)
 {
 double[] parametr = { 2, 3 };
 double result = 0;
 foreach (var item in parametr)
 {
 result += (1 / item);
 }
 Console.WriteLine(result);
 }
 }
}





Лаба 2
using System;
using System.Text;
namespace Lab2
{
 class Program
 {
 static void Main(string[] args)
 {
 double n = 2.5;
 int k = 3;
 double result = default;
 for (int i = 0; i < k; i++)
 {
 if (n * n >= 0 && n * n <= n * k)
 {
 result += (Math.Pow(k, 2) - 1) / (Math.Pow(-1, k + 1) * Math.Pow(k,
2) + 7);
 }
 else
 {
 break;
 }
 }
 Console.WriteLine(result);
 }
 }
}





Лаба 3
using System;
namespace Lab3_Es
{
 class Program
 {
 static void Main(string[] args)
 {
 string Number = "10";
 if (Number.Length == 2)
 {
 int number = int.Parse(Number);
 Console.WriteLine(number % 2 == 0);
 }
 }
 }
}






Лаба 4
using System;
using System.Text;
namespace Laba4
{
 class Program
 {
 static void Addition(params int[] num)
 {
 for (int i = 1; i < num.Length; i ++)
 {
 if (num[i] % 2 == 0)
 {
 Console.WriteLine($"Парные числа:{num[i] + " "}");
 }
 }
 Console.WriteLine("- - - - - -");
 for (int i = 0; i < num.Length; i ++)
 {
 if (num[i] % 2 != 0)
 {
 Console.WriteLine($"Не парные числа {num[i] + " "}");
 }
 }
 }
 static void Main(string[] args)
 {
 Console.OutputEncoding = Encoding.UTF8;
 Addition(7,4,2,5,1,100);
 Console.WriteLine();
 }
 }
}






Лаба 5
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
namespace Lab5
{
 class Program
 {
 static void Main(string[] args)
 {
 Console.OutputEncoding = Encoding.UTF8;
 WMatrix min = new WMatrix();
 var mat = min.CreatMatrix();
 WMatrix max = new WMatrix();
 max.MatrixMin(mat);
 max.SortMatrix(mat);
 }

 }
}
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
namespace Lab5
{
 public class WMatrix
 {
 public int[][] CreatMatrix()
 {
 int[][] numbers = new int[3][]
 {
 new int [] {122,13,-1,7,9},
 new int [] {3,4,6,90},
 new int [] {3,4,6,90,100,23,1}
 };
 for (int i = 0; i < numbers.Length; i++)
 {
 for (int j = 0; j < numbers[i].Length; j++)
 {
 Console.Write($"{numbers[i][j]} \t");
 }
 Console.WriteLine(" ");
 }
 return numbers;
 }
 public void MatrixMin(int[][] numbers)
 {
 int minValue = numbers.SelectMany(x => x).Min();
 Console.WriteLine($"Мин: {minValue}");
 }
 public void SortMatrix(int[][] numbers)
 {
 int maxValue = numbers[1].Max();
 Console.WriteLine($"Макс. в отсортированом ряде: {maxValue}");
 }
 }
}
